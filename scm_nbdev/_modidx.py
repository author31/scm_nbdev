# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/scm_nbdev',
                'doc_host': 'https://.github.io',
                'git_url': 'https://github.com//scm_nbdev',
                'lib_path': 'scm_nbdev'},
  'syms': { 'scm_nbdev.cams': { 'scm_nbdev.cams.blend_cam': ('cams.html#blend_cam', 'scm_nbdev/cams.py'),
                                'scm_nbdev.cams.calculate_IOU': ('cams.html#calculate_iou', 'scm_nbdev/cams.py'),
                                'scm_nbdev.cams.draw_bbox': ('cams.html#draw_bbox', 'scm_nbdev/cams.py'),
                                'scm_nbdev.cams.evaluate_cls_loc': ('cams.html#evaluate_cls_loc', 'scm_nbdev/cams.py'),
                                'scm_nbdev.cams.get_bboxes': ('cams.html#get_bboxes', 'scm_nbdev/cams.py'),
                                'scm_nbdev.cams.resize_cam': ('cams.html#resize_cam', 'scm_nbdev/cams.py'),
                                'scm_nbdev.cams.tensor2image': ('cams.html#tensor2image', 'scm_nbdev/cams.py')},
            'scm_nbdev.cams_deit': { 'scm_nbdev.cams_deit.blend_cam': ('cams_deit.html#blend_cam', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.cal_iou': ('cams_deit.html#cal_iou', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.calculate_IOU': ('cams_deit.html#calculate_iou', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.cls_loc_err': ('cams_deit.html#cls_loc_err', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.draw_bbox': ('cams_deit.html#draw_bbox', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.evaluate_cls_loc': ('cams_deit.html#evaluate_cls_loc', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.get_badcase_detail': ( 'cams_deit.html#get_badcase_detail',
                                                                                 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.get_bboxes': ('cams_deit.html#get_bboxes', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.get_topk_boxes': ('cams_deit.html#get_topk_boxes', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.resize_cam': ('cams_deit.html#resize_cam', 'scm_nbdev/cams_deit.py'),
                                     'scm_nbdev.cams_deit.tensor2image': ('cams_deit.html#tensor2image', 'scm_nbdev/cams_deit.py')},
            'scm_nbdev.config.default': { 'scm_nbdev.config.default.AttrDict': ( 'config.default.html#attrdict',
                                                                                 'scm_nbdev/config/default.py'),
                                          'scm_nbdev.config.default.AttrDict.__getattr__': ( 'config.default.html#__getattr__',
                                                                                             'scm_nbdev/config/default.py'),
                                          'scm_nbdev.config.default.AttrDict.__setattr__': ( 'config.default.html#__setattr__',
                                                                                             'scm_nbdev/config/default.py'),
                                          'scm_nbdev.config.default.cfg_from_file': ( 'config.default.html#cfg_from_file',
                                                                                      'scm_nbdev/config/default.py'),
                                          'scm_nbdev.config.default.cfg_from_list': ( 'config.default.html#cfg_from_list',
                                                                                      'scm_nbdev/config/default.py'),
                                          'scm_nbdev.config.default.merge_dicts': ( 'config.default.html#merge_dicts',
                                                                                    'scm_nbdev/config/default.py'),
                                          'scm_nbdev.config.default.update_config': ( 'config.default.html#update_config',
                                                                                      'scm_nbdev/config/default.py')},
            'scm_nbdev.config.utils': { 'scm_nbdev.config.utils.AttrDict': ('config.utils.html#attrdict', 'scm_nbdev/config/utils.py'),
                                        'scm_nbdev.config.utils.AttrDict.__getattr__': ( 'config.utils.html#__getattr__',
                                                                                         'scm_nbdev/config/utils.py'),
                                        'scm_nbdev.config.utils.AttrDict.__setattr__': ( 'config.utils.html#__setattr__',
                                                                                         'scm_nbdev/config/utils.py')},
            'scm_nbdev.core.engine': { 'scm_nbdev.core.engine.AverageMeter': ('core.engine.html#averagemeter', 'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.AverageMeter.__init__': ( 'core.engine.html#__init__',
                                                                                        'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.AverageMeter.reset': ('core.engine.html#reset', 'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.AverageMeter.update': ('core.engine.html#update', 'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.accuracy': ('core.engine.html#accuracy', 'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.adjust_learning_rate': ( 'core.engine.html#adjust_learning_rate',
                                                                                       'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.adjust_lr_by_scheduler': ( 'core.engine.html#adjust_lr_by_scheduler',
                                                                                         'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.create_data_loader': ( 'core.engine.html#create_data_loader',
                                                                                     'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.list2acc': ('core.engine.html#list2acc', 'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.map_sklearn': ('core.engine.html#map_sklearn', 'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.save_checkpoint': ( 'core.engine.html#save_checkpoint',
                                                                                  'scm_nbdev/core/engine.py'),
                                       'scm_nbdev.core.engine.str_gpus': ('core.engine.html#str_gpus', 'scm_nbdev/core/engine.py')},
            'scm_nbdev.core.functions': { 'scm_nbdev.core.functions.prepare_env': ( 'core.functions.html#prepare_env',
                                                                                    'scm_nbdev/core/functions.py')},
            'scm_nbdev.core.lr_scheduler': { 'scm_nbdev.core.lr_scheduler.LRScheduler': ( 'core.lr_scheduler.html#lrscheduler',
                                                                                          'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.LRScheduler.__init__': ( 'core.lr_scheduler.html#__init__',
                                                                                                   'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.LRScheduler._get_lr_func': ( 'core.lr_scheduler.html#_get_lr_func',
                                                                                                       'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.LRScheduler.update_lr': ( 'core.lr_scheduler.html#update_lr',
                                                                                                    'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.cos_lr': ( 'core.lr_scheduler.html#cos_lr',
                                                                                     'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.multistep_lr': ( 'core.lr_scheduler.html#multistep_lr',
                                                                                           'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.warm_cos_lr': ( 'core.lr_scheduler.html#warm_cos_lr',
                                                                                          'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.yolox_semi_warm_cos_lr': ( 'core.lr_scheduler.html#yolox_semi_warm_cos_lr',
                                                                                                     'scm_nbdev/core/lr_scheduler.py'),
                                             'scm_nbdev.core.lr_scheduler.yolox_warm_cos_lr': ( 'core.lr_scheduler.html#yolox_warm_cos_lr',
                                                                                                'scm_nbdev/core/lr_scheduler.py')},
            'scm_nbdev.datasets.cub': { 'scm_nbdev.datasets.cub.CUBDataset': ('datasets.cub.html#cubdataset', 'scm_nbdev/datasets/cub.py'),
                                        'scm_nbdev.datasets.cub.CUBDataset.__getitem__': ( 'datasets.cub.html#__getitem__',
                                                                                           'scm_nbdev/datasets/cub.py'),
                                        'scm_nbdev.datasets.cub.CUBDataset.__init__': ( 'datasets.cub.html#__init__',
                                                                                        'scm_nbdev/datasets/cub.py'),
                                        'scm_nbdev.datasets.cub.CUBDataset.__len__': ( 'datasets.cub.html#__len__',
                                                                                       'scm_nbdev/datasets/cub.py'),
                                        'scm_nbdev.datasets.cub.CUBDataset.get_index': ( 'datasets.cub.html#get_index',
                                                                                         'scm_nbdev/datasets/cub.py'),
                                        'scm_nbdev.datasets.cub.CUBDataset.remove_1st_column': ( 'datasets.cub.html#remove_1st_column',
                                                                                                 'scm_nbdev/datasets/cub.py'),
                                        'scm_nbdev.datasets.cub.get_transforms': ( 'datasets.cub.html#get_transforms',
                                                                                   'scm_nbdev/datasets/cub.py')},
            'scm_nbdev.datasets.imagenet': { 'scm_nbdev.datasets.imagenet.ImageNetDataset': ( 'datasets.imagenet.html#imagenetdataset',
                                                                                              'scm_nbdev/datasets/imagenet.py'),
                                             'scm_nbdev.datasets.imagenet.ImageNetDataset.__getitem__': ( 'datasets.imagenet.html#__getitem__',
                                                                                                          'scm_nbdev/datasets/imagenet.py'),
                                             'scm_nbdev.datasets.imagenet.ImageNetDataset.__init__': ( 'datasets.imagenet.html#__init__',
                                                                                                       'scm_nbdev/datasets/imagenet.py'),
                                             'scm_nbdev.datasets.imagenet.ImageNetDataset.__len__': ( 'datasets.imagenet.html#__len__',
                                                                                                      'scm_nbdev/datasets/imagenet.py'),
                                             'scm_nbdev.datasets.imagenet.get_transforms': ( 'datasets.imagenet.html#get_transforms',
                                                                                             'scm_nbdev/datasets/imagenet.py')},
            'scm_nbdev.models.conformer': { 'scm_nbdev.models.conformer.Attention': ( 'models.conformer.html#attention',
                                                                                      'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Attention.__init__': ( 'models.conformer.html#__init__',
                                                                                               'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Attention.forward': ( 'models.conformer.html#forward',
                                                                                              'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Block': ( 'models.conformer.html#block',
                                                                                  'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Block.__init__': ( 'models.conformer.html#__init__',
                                                                                           'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Block.forward': ( 'models.conformer.html#forward',
                                                                                          'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Conformer': ( 'models.conformer.html#conformer',
                                                                                      'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Conformer.__init__': ( 'models.conformer.html#__init__',
                                                                                               'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Conformer._init_weights': ( 'models.conformer.html#_init_weights',
                                                                                                    'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Conformer.forward': ( 'models.conformer.html#forward',
                                                                                              'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Conformer.no_weight_decay': ( 'models.conformer.html#no_weight_decay',
                                                                                                      'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.ConvBlock': ( 'models.conformer.html#convblock',
                                                                                      'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.ConvBlock.__init__': ( 'models.conformer.html#__init__',
                                                                                               'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.ConvBlock.forward': ( 'models.conformer.html#forward',
                                                                                              'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.ConvBlock.zero_init_last_bn': ( 'models.conformer.html#zero_init_last_bn',
                                                                                                        'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.ConvTransBlock': ( 'models.conformer.html#convtransblock',
                                                                                           'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.ConvTransBlock.__init__': ( 'models.conformer.html#__init__',
                                                                                                    'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.ConvTransBlock.forward': ( 'models.conformer.html#forward',
                                                                                                   'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Encoder': ( 'models.conformer.html#encoder',
                                                                                    'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Encoder.__init__': ( 'models.conformer.html#__init__',
                                                                                             'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Encoder.forward': ( 'models.conformer.html#forward',
                                                                                            'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.FCUDown': ( 'models.conformer.html#fcudown',
                                                                                    'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.FCUDown.__init__': ( 'models.conformer.html#__init__',
                                                                                             'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.FCUDown.forward': ( 'models.conformer.html#forward',
                                                                                            'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.FCUUp': ( 'models.conformer.html#fcuup',
                                                                                  'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.FCUUp.__init__': ( 'models.conformer.html#__init__',
                                                                                           'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.FCUUp.forward': ( 'models.conformer.html#forward',
                                                                                          'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Med_ConvBlock': ( 'models.conformer.html#med_convblock',
                                                                                          'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Med_ConvBlock.__init__': ( 'models.conformer.html#__init__',
                                                                                                   'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Med_ConvBlock.forward': ( 'models.conformer.html#forward',
                                                                                                  'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Med_ConvBlock.zero_init_last_bn': ( 'models.conformer.html#zero_init_last_bn',
                                                                                                            'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Mlp': ( 'models.conformer.html#mlp',
                                                                                'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Mlp.__init__': ( 'models.conformer.html#__init__',
                                                                                         'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.Mlp.forward': ( 'models.conformer.html#forward',
                                                                                        'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.conformer_scm_small_patch16': ( 'models.conformer.html#conformer_scm_small_patch16',
                                                                                                        'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.embeddings_to_cosine_similarity_matrix': ( 'models.conformer.html#embeddings_to_cosine_similarity_matrix',
                                                                                                                   'scm_nbdev/models/conformer.py'),
                                            'scm_nbdev.models.conformer.norm_cam': ( 'models.conformer.html#norm_cam',
                                                                                     'scm_nbdev/models/conformer.py')},
            'scm_nbdev.models.deit': { 'scm_nbdev.models.deit.Encoder': ('models.deit.html#encoder', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.Encoder.__init__': ('models.deit.html#__init__', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.Encoder.forward': ('models.deit.html#forward', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.SCM': ('models.deit.html#scm', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.SCM.__init__': ('models.deit.html#__init__', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.SCM.forward': ('models.deit.html#forward', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.SCM.forward_features': ( 'models.deit.html#forward_features',
                                                                                       'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.TSCAM': ('models.deit.html#tscam', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.TSCAM.__init__': ('models.deit.html#__init__', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.TSCAM.forward': ('models.deit.html#forward', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.TSCAM.forward_features': ( 'models.deit.html#forward_features',
                                                                                         'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_scm_base_patch16_224': ( 'models.deit.html#deit_scm_base_patch16_224',
                                                                                            'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_scm_base_patch16_384': ( 'models.deit.html#deit_scm_base_patch16_384',
                                                                                            'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_scm_small_patch16_224': ( 'models.deit.html#deit_scm_small_patch16_224',
                                                                                             'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_scm_small_patch16_384': ( 'models.deit.html#deit_scm_small_patch16_384',
                                                                                             'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_scm_tiny_patch16_224': ( 'models.deit.html#deit_scm_tiny_patch16_224',
                                                                                            'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_tscam_base_patch16_224': ( 'models.deit.html#deit_tscam_base_patch16_224',
                                                                                              'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_tscam_small_patch16_224': ( 'models.deit.html#deit_tscam_small_patch16_224',
                                                                                               'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.deit_tscam_tiny_patch16_224': ( 'models.deit.html#deit_tscam_tiny_patch16_224',
                                                                                              'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.embeddings_to_cosine_similarity_matrix': ( 'models.deit.html#embeddings_to_cosine_similarity_matrix',
                                                                                                         'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.norm_cam': ('models.deit.html#norm_cam', 'scm_nbdev/models/deit.py'),
                                       'scm_nbdev.models.deit.vit_scm_small_patch16_224': ( 'models.deit.html#vit_scm_small_patch16_224',
                                                                                            'scm_nbdev/models/deit.py')},
            'scm_nbdev.models.graph_fusion': { 'scm_nbdev.models.graph_fusion.Fuse': ( 'models.graph_fusion.html#fuse',
                                                                                       'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.__init__': ( 'models.graph_fusion.html#__init__',
                                                                                                'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.__repr__': ( 'models.graph_fusion.html#__repr__',
                                                                                                'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.adjMat': ( 'models.graph_fusion.html#adjmat',
                                                                                              'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.connect': ( 'models.graph_fusion.html#connect',
                                                                                               'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.dilation': ( 'models.graph_fusion.html#dilation',
                                                                                                'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.forward': ( 'models.graph_fusion.html#forward',
                                                                                               'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.getAdj': ( 'models.graph_fusion.html#getadj',
                                                                                              'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.getDimIdx': ( 'models.graph_fusion.html#getdimidx',
                                                                                                 'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.getIdMat': ( 'models.graph_fusion.html#getidmat',
                                                                                                'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.getLap': ( 'models.graph_fusion.html#getlap',
                                                                                              'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.getPatchIdx': ( 'models.graph_fusion.html#getpatchidx',
                                                                                                   'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.grid_size': ( 'models.graph_fusion.html#grid_size',
                                                                                                 'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.idMat': ( 'models.graph_fusion.html#idmat',
                                                                                             'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.init_weights': ( 'models.graph_fusion.html#init_weights',
                                                                                                    'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.laplacian': ( 'models.graph_fusion.html#laplacian',
                                                                                                 'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.loss_rate': ( 'models.graph_fusion.html#loss_rate',
                                                                                                 'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.num_connect': ( 'models.graph_fusion.html#num_connect',
                                                                                                   'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.Fuse.selectValidIdx': ( 'models.graph_fusion.html#selectvalididx',
                                                                                                      'scm_nbdev/models/graph_fusion.py'),
                                               'scm_nbdev.models.graph_fusion.inverse_schulz': ( 'models.graph_fusion.html#inverse_schulz',
                                                                                                 'scm_nbdev/models/graph_fusion.py')},
            'scm_nbdev.models.vision_transformer': { 'scm_nbdev.models.vision_transformer.Attention': ( 'models.vision_transformer.html#attention',
                                                                                                        'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Attention.__init__': ( 'models.vision_transformer.html#__init__',
                                                                                                                 'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Attention.forward': ( 'models.vision_transformer.html#forward',
                                                                                                                'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Block': ( 'models.vision_transformer.html#block',
                                                                                                    'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Block.__init__': ( 'models.vision_transformer.html#__init__',
                                                                                                             'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Block.forward': ( 'models.vision_transformer.html#forward',
                                                                                                            'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.HybridEmbed': ( 'models.vision_transformer.html#hybridembed',
                                                                                                          'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.HybridEmbed.__init__': ( 'models.vision_transformer.html#__init__',
                                                                                                                   'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.HybridEmbed.forward': ( 'models.vision_transformer.html#forward',
                                                                                                                  'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Mlp': ( 'models.vision_transformer.html#mlp',
                                                                                                  'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Mlp.__init__': ( 'models.vision_transformer.html#__init__',
                                                                                                           'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.Mlp.forward': ( 'models.vision_transformer.html#forward',
                                                                                                          'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.PatchEmbed': ( 'models.vision_transformer.html#patchembed',
                                                                                                         'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.PatchEmbed.__init__': ( 'models.vision_transformer.html#__init__',
                                                                                                                  'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.PatchEmbed.forward': ( 'models.vision_transformer.html#forward',
                                                                                                                 'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer': ( 'models.vision_transformer.html#visiontransformer',
                                                                                                                'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer.__init__': ( 'models.vision_transformer.html#__init__',
                                                                                                                         'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer._init_weights': ( 'models.vision_transformer.html#_init_weights',
                                                                                                                              'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer.forward': ( 'models.vision_transformer.html#forward',
                                                                                                                        'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer.forward_features': ( 'models.vision_transformer.html#forward_features',
                                                                                                                                 'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer.get_classifier': ( 'models.vision_transformer.html#get_classifier',
                                                                                                                               'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer.no_weight_decay': ( 'models.vision_transformer.html#no_weight_decay',
                                                                                                                                'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.VisionTransformer.reset_classifier': ( 'models.vision_transformer.html#reset_classifier',
                                                                                                                                 'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer._cfg': ( 'models.vision_transformer.html#_cfg',
                                                                                                   'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer._conv_filter': ( 'models.vision_transformer.html#_conv_filter',
                                                                                                           'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_base_patch16_224': ( 'models.vision_transformer.html#vit_base_patch16_224',
                                                                                                                   'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_base_patch16_384': ( 'models.vision_transformer.html#vit_base_patch16_384',
                                                                                                                   'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_base_patch32_384': ( 'models.vision_transformer.html#vit_base_patch32_384',
                                                                                                                   'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_base_resnet26d_224': ( 'models.vision_transformer.html#vit_base_resnet26d_224',
                                                                                                                     'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_base_resnet50d_224': ( 'models.vision_transformer.html#vit_base_resnet50d_224',
                                                                                                                     'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_huge_patch16_224': ( 'models.vision_transformer.html#vit_huge_patch16_224',
                                                                                                                   'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_huge_patch32_384': ( 'models.vision_transformer.html#vit_huge_patch32_384',
                                                                                                                   'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_large_patch16_224': ( 'models.vision_transformer.html#vit_large_patch16_224',
                                                                                                                    'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_large_patch16_384': ( 'models.vision_transformer.html#vit_large_patch16_384',
                                                                                                                    'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_large_patch32_384': ( 'models.vision_transformer.html#vit_large_patch32_384',
                                                                                                                    'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_small_patch16_224': ( 'models.vision_transformer.html#vit_small_patch16_224',
                                                                                                                    'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_small_resnet26d_224': ( 'models.vision_transformer.html#vit_small_resnet26d_224',
                                                                                                                      'scm_nbdev/models/vision_transformer.py'),
                                                     'scm_nbdev.models.vision_transformer.vit_small_resnet50d_s3_224': ( 'models.vision_transformer.html#vit_small_resnet50d_s3_224',
                                                                                                                         'scm_nbdev/models/vision_transformer.py')},
            'scm_nbdev.utils': { 'scm_nbdev.utils.AttrDict': ('utils.html#attrdict', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.AttrDict.__getattr__': ('utils.html#__getattr__', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.AttrDict.__setattr__': ('utils.html#__setattr__', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.Logger': ('utils.html#logger', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.Logger.__init__': ('utils.html#__init__', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.Logger.flush': ('utils.html#flush', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.Logger.write': ('utils.html#write', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.backup_codes': ('utils.html#backup_codes', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.fix_random_seed': ('utils.html#fix_random_seed', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.fix_seed_all': ('utils.html#fix_seed_all', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.mkdir': ('utils.html#mkdir', 'scm_nbdev/utils.py'),
                                 'scm_nbdev.utils.rm': ('utils.html#rm', 'scm_nbdev/utils.py')}}}